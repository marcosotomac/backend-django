# Configuración para AWS Academy - Red Social Backend
# Copia este archivo como .env y actualiza con tus credenciales

# Configuración de Django
SECRET_KEY=django-insecure-your-secret-key-here-change-in-production
DEBUG=True
ALLOWED_HOSTS=localhost,127.0.0.1

# Base de datos (SQLite para desarrollo)
DATABASE_URL=sqlite:///db.sqlite3

# Configuración de JWT
JWT_SECRET_KEY=your-jwt-secret-key-here

# ===============================
# CONFIGURACIÓN AWS ACADEMY S3
# ===============================

# Para desarrollo local (recomendado)
USE_S3=False

# Para pruebas con AWS Academy S3 (descomenta las siguientes líneas)
# USE_S3=True

# Credenciales de AWS Academy (obtener de: AWS Details > Show AWS CLI)
# ⚠️ IMPORTANTE: Estas credenciales EXPIRAN cada 3-4 horas
# AWS_ACCESS_KEY_ID=ASIA...  # Comienza con ASIA para Academy
# AWS_SECRET_ACCESS_KEY=...
# AWS_SESSION_TOKEN=...      # ¡OBLIGATORIO para Academy!

# Configuración del bucket
# AWS_STORAGE_BUCKET_NAME=red-social-academy-tu-student-id
# AWS_S3_REGION_NAME=us-east-1
# AWS_S3_CUSTOM_DOMAIN=red-social-academy-tu-student-id.s3.amazonaws.com

# ===============================
# INSTRUCCIONES PARA AWS ACADEMY
# ===============================

# 1. Inicia tu AWS Academy Learner Lab
# 2. Haz clic en "Start Lab" y espera el indicador verde
# 3. Haz clic en "AWS Details" > "Show" (AWS CLI section)
# 4. Copia las credenciales a las variables de arriba
# 5. Cambia USE_S3=True
# 6. Crea tu bucket S3 con el nombre especificado
# 7. Reinicia el servidor: python manage.py runserver

# ⏰ RECORDATORIO: Las credenciales expiran cada 3-4 horas
# Para renovar:
# 1. Ve a AWS Academy > AWS Details > Show
# 2. Actualiza las variables AWS_* en este archivo
# 3. Reinicia el servidor Django

# 📁 ALTERNATIVA: Para desarrollo sin preocuparte por expiración
# Mantén USE_S3=False y usa almacenamiento local