# Generated by Django 5.2.6 on 2025-09-13 12:26

import django.db.models.deletion
import utils
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('story_type', models.CharField(choices=[('image', 'Imagen'), ('video', 'Video'), ('text', 'Texto')], default='image', max_length=10)),
                ('content', models.TextField(blank=True, null=True)),
                ('media_file', models.FileField(blank=True, null=True, upload_to=utils.story_media_path)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=utils.story_media_path)),
                ('is_public', models.BooleanField(default=True)),
                ('allow_replies', models.BooleanField(default=True)),
                ('background_color', models.CharField(default='#000000', max_length=7)),
                ('text_color', models.CharField(default='#FFFFFF', max_length=7)),
                ('duration', models.PositiveIntegerField(default=10)),
                ('music_track', models.CharField(blank=True, max_length=200, null=True)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('replies_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Story',
                'verbose_name_plural': 'Stories',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StoryHighlight',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to=utils.story_media_path)),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story_highlights', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Highlight',
                'verbose_name_plural': 'Highlights',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='StoryHighlightItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('highlight', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='highlight_items', to='stories.storyhighlight')),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='highlight_items', to='stories.story')),
            ],
            options={
                'verbose_name': 'Item de Highlight',
                'verbose_name_plural': 'Items de Highlights',
                'ordering': ['order', 'added_at'],
            },
        ),
        migrations.AddField(
            model_name='storyhighlight',
            name='stories',
            field=models.ManyToManyField(related_name='highlights', through='stories.StoryHighlightItem', to='stories.story'),
        ),
        migrations.CreateModel(
            name='StoryLike',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story_likes', to='stories.story')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story_likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Like de Story',
                'verbose_name_plural': 'Likes de Stories',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StoryReply',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField(max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story_replies_sent', to=settings.AUTH_USER_MODEL)),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story_replies', to='stories.story')),
            ],
            options={
                'verbose_name': 'Respuesta a Story',
                'verbose_name_plural': 'Respuestas a Stories',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StoryView',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('view_duration', models.PositiveIntegerField(default=0)),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story_views', to='stories.story')),
                ('viewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story_views', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vista de Story',
                'verbose_name_plural': 'Vistas de Stories',
                'ordering': ['-viewed_at'],
            },
        ),
        migrations.AddIndex(
            model_name='story',
            index=models.Index(fields=['author', '-created_at'], name='stories_sto_author__75ed0d_idx'),
        ),
        migrations.AddIndex(
            model_name='story',
            index=models.Index(fields=['expires_at'], name='stories_sto_expires_b8bcdb_idx'),
        ),
        migrations.AddIndex(
            model_name='story',
            index=models.Index(fields=['is_public', '-created_at'], name='stories_sto_is_publ_5b8b10_idx'),
        ),
        migrations.AddIndex(
            model_name='storyhighlightitem',
            index=models.Index(fields=['highlight', 'order'], name='stories_sto_highlig_45d55a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='storyhighlightitem',
            unique_together={('highlight', 'story')},
        ),
        migrations.AddIndex(
            model_name='storyhighlight',
            index=models.Index(fields=['user', '-updated_at'], name='stories_sto_user_id_34f3e0_idx'),
        ),
        migrations.AddIndex(
            model_name='storyhighlight',
            index=models.Index(fields=['is_public', '-updated_at'], name='stories_sto_is_publ_b7e50e_idx'),
        ),
        migrations.AddIndex(
            model_name='storylike',
            index=models.Index(fields=['story', '-created_at'], name='stories_sto_story_i_2d36db_idx'),
        ),
        migrations.AddIndex(
            model_name='storylike',
            index=models.Index(fields=['user', '-created_at'], name='stories_sto_user_id_c7a908_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='storylike',
            unique_together={('story', 'user')},
        ),
        migrations.AddIndex(
            model_name='storyreply',
            index=models.Index(fields=['story', '-created_at'], name='stories_sto_story_i_6e5755_idx'),
        ),
        migrations.AddIndex(
            model_name='storyreply',
            index=models.Index(fields=['sender', '-created_at'], name='stories_sto_sender__fd28d3_idx'),
        ),
        migrations.AddIndex(
            model_name='storyview',
            index=models.Index(fields=['story', '-viewed_at'], name='stories_sto_story_i_247856_idx'),
        ),
        migrations.AddIndex(
            model_name='storyview',
            index=models.Index(fields=['viewer', '-viewed_at'], name='stories_sto_viewer__e3919f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='storyview',
            unique_together={('story', 'viewer')},
        ),
    ]
